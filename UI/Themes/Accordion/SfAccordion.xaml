<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:skin="clr-namespace:Syncfusion.SfSkinManager;assembly=Syncfusion.SfSkinManager.WPF"
    xmlns:theme="clr-namespace:Syncfusion.Windows.Controls.Layout;assembly=Syncfusion.SfAccordion.WPF">

    <ResourceDictionary.MergedDictionaries>
        <skin:ResourceDictionaryProvider
            DictionaryName="Common"
            ThemeName="FluentDark" />
        <skin:ResourceDictionaryProvider
            DictionaryName="Brushes"
            ThemeName="FluentDark" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="SyncfusionLayoutTransformerStyle"
        TargetType="theme:LayoutTransformer">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="theme:LayoutTransformer">
                    <Grid
                        x:Name="TransformRoot"
                        Background="{TemplateBinding Background}">
                        <ContentPresenter
                            x:Name="Presenter"
                            Margin="12,0,0,0"
                            VerticalAlignment="Center"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}">
                            <ContentPresenter.Resources>
                                <Style
                                    BasedOn="{x:Null}"
                                    TargetType="{x:Type TextBlock}" />
                            </ContentPresenter.Resources>
                        </ContentPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SyncfusionExpandableContentControlStyle"
        TargetType="theme:ExpandableContentControl">
        <Setter Property="IsEnabled" Value="true" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="{DynamicResource FluentDark.BorderThickness}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="theme:ExpandableContentControl">
                    <ContentPresenter
                        x:Name="ContentSite"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}"
                        ContentTemplate="{TemplateBinding ContentTemplate}"
                        IsEnabled="True">
                        <ContentPresenter.Resources>
                            <Style
                                BasedOn="{x:Null}"
                                TargetType="{x:Type TextBlock}" />
                        </ContentPresenter.Resources>
                    </ContentPresenter>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="SyncfusionAccordionButtonStyle"
        TargetType="{x:Type theme:AccordionButton}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="theme:AccordionButton">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid
                            x:Name="buttonGrid"
                            MinHeight="{TemplateBinding MinHeight}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="Center"
                            Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    x:Name="cd0"
                                    Width="*" />
                                <ColumnDefinition
                                    x:Name="cd1"
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    x:Name="rd0"
                                    Height="*" />
                                <RowDefinition
                                    x:Name="rd1"
                                    Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid
                                x:Name="icon"
                                Grid.Row="0"
                                Grid.Column="1"
                                Width="19"
                                Height="19"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                RenderTransformOrigin="0.5,0.5">
                                <Grid.Margin>
                                    <Thickness>5,0,5,0</Thickness>
                                </Grid.Margin>
                                <Grid.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Grid.RenderTransform>
                                <Path
                                    x:Name="arrow"
                                    Width="6"
                                    Height="10"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M6.5 1L1 6.5L6.5 12"
                                    RenderTransformOrigin="0.5,0.5"
                                    Stretch="Uniform"
                                    Stroke="{DynamicResource IconColor}"
                                    StrokeThickness="{DynamicResource FluentDark.StrokeThickness1}">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <theme:LayoutTransformer
                                x:Name="header"
                                Grid.Row="0"
                                Grid.Column="0"
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                Style="{DynamicResource SyncfusionLayoutTransformerStyle}" />
                        </Grid>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpandDirectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                            To="180"
                                            Duration="00:00:00.3" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimation
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="icon"
                                            Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)"
                                            To="270"
                                            Duration="00:00:00.3" />
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="buttonGrid"
                                            Storyboard.TargetProperty="(UIElement.Opacity)"
                                            Duration="00:00:00.0010000">
                                            <SplineDoubleKeyFrame
                                                KeyTime="00:00:00"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Checked" />
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>

                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="skin:SfSkinManager.SizeMode" Value="Touch">
                            <Setter TargetName="arrow" Property="Margin" Value="0,5,0,0" />
                            <Setter TargetName="arrow" Property="Width" Value="12" />
                            <Setter TargetName="arrow" Property="Height" Value="10" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="buttonGrid" Property="Background" Value="{DynamicResource ControlBackground}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="buttonGrid" Property="Background" Value="{DynamicResource SteelBlueBackground}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource HoveredForeground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource HoveredForeground}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="buttonGrid" Property="Background" Value="{DynamicResource SteelBlueBackground}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource LightBlueBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="buttonGrid" Property="Background" Value="{DynamicResource SteelBlueBackground}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource SelectedForeground}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource SelectedForeground}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="buttonGrid" Property="Background" Value="{DynamicResource SteelBlueBackground}" />
                            <Setter TargetName="header" Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
                            <Setter TargetName="arrow" Property="Stroke" Value="{DynamicResource LightBlueBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="skin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource FlatKeyboardFocusVisualStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="SyncfusionSfAccordionStyle"
        TargetType="{x:Type theme:SfAccordion}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource FluentDark.ThemeFontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource FluentDark.BodyTextStyle}" />
        <Setter Property="FontWeight" Value="{DynamicResource FluentDark.FontWeightNormal}" />
        <Setter Property="AccentBrush" Value="{DynamicResource ControlBackground}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Top" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="BorderThickness" Value="{DynamicResource FluentDark.BorderThickness0100}" />
        <!--  Accordion expects a stackpanel to layout its children.  -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel VerticalAlignment="Top" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type theme:SfAccordion}">
                    <Grid x:Name="Root">
                        <Border
                            x:Name="Border"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer
                                x:Name="PART_ScrollViewer"
                                Background="{x:Null}"
                                BorderBrush="Transparent"
                                HorizontalScrollBarVisibility="Disabled"
                                IsTabStop="False"
                                VerticalScrollBarVisibility="Auto">
                                <ItemsPresenter x:Name="PART_ItemsPresenter" />
                            </ScrollViewer>
                        </Border>
                        <VisualStateManager.VisualStateGroups>
                            <!--  common states  -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!--  focus states  -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{DynamicResource BorderBrush.Color}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        BasedOn="{StaticResource SyncfusionSfAccordionStyle}"
        TargetType="{x:Type theme:SfAccordion}" />

    <Style
        x:Key="SyncfusionSfAccordionItemStyle"
        TargetType="{x:Type theme:SfAccordionItem}">
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="Background" Value="{DynamicResource ControlBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource FluentDark.ThemeFontFamily}" />
        <Setter Property="FontWeight" Value="{DynamicResource FluentDark.FontWeightNormal}" />
        <Setter Property="FontSize" Value="{DynamicResource FluentDark.SubHeaderTextStyle}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="{DynamicResource FluentDark.BorderThickness1011}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="ExpandableContentControlStyle" Value="{DynamicResource SyncfusionExpandableContentControlStyle}" />
        <Setter Property="AccordionButtonStyle" Value="{DynamicResource SyncfusionAccordionButtonStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type theme:SfAccordionItem}">
                    <Border
                        x:Name="border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Border.Margin>
                            <Thickness>0,0,0,1</Thickness>
                        </Border.Margin>
                        <Grid
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    x:Name="rd0"
                                    Height="Auto" />
                                <RowDefinition
                                    x:Name="rd1"
                                    Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                    x:Name="cd0"
                                    Width="*" />
                                <ColumnDefinition
                                    x:Name="cd1"
                                    Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <theme:AccordionButton
                                x:Name="ExpanderButton"
                                Grid.Row="0"
                                MinHeight="32"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                AccentBrush="{Binding AccentBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                Content="{TemplateBinding Header}"
                                ContentTemplate="{TemplateBinding HeaderTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsChecked="{TemplateBinding IsSelected}"
                                IsTabStop="True"
                                Style="{TemplateBinding AccordionButtonStyle}" />
                            <theme:ExpandableContentControl
                                x:Name="ExpandSite"
                                Grid.Row="1"
                                Margin="12,0,0,0"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                FontFamily="{TemplateBinding FontFamily}"
                                FontSize="{TemplateBinding FontSize}"
                                FontStretch="{TemplateBinding FontStretch}"
                                FontStyle="{TemplateBinding FontStyle}"
                                FontWeight="{TemplateBinding FontWeight}"
                                Foreground="{TemplateBinding Foreground}"
                                IsTabStop="False"
                                Percentage="0"
                                Style="{TemplateBinding ExpandableContentControlStyle}" />
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <!--  CommonState  -->
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{DynamicResource BorderBrush.Color}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <!--  FocusStates  -->
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{DynamicResource ControlBackgroundHovered.Color}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <!--  ExpansionStates  -->
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Collapsed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(theme:ExpandableContentControl.Percentage)"
                                            Duration="00:00:01">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.2,0,0,1"
                                                KeyTime="00:00:0.3"
                                                Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames
                                            BeginTime="00:00:00"
                                            Storyboard.TargetName="ExpandSite"
                                            Storyboard.TargetProperty="(theme:ExpandableContentControl.Percentage)"
                                            Duration="00:00:01">
                                            <SplineDoubleKeyFrame
                                                KeySpline="0.2,0,0,1"
                                                KeyTime="00:00:0.3"
                                                Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimation
                                            Storyboard.TargetName="border"
                                            Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)"
                                            To="{DynamicResource BorderBrush.Color}"
                                            Duration="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--  ExpansionStates  -->
                            <VisualStateGroup x:Name="LockedStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Locked">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="ExpanderButton"
                                            Storyboard.TargetProperty="IsEnabled"
                                            Duration="0">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0"
                                                Value="False" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unlocked">
                                    <Storyboard>
                                        <BooleanAnimationUsingKeyFrames
                                            Storyboard.TargetName="ExpanderButton"
                                            Storyboard.TargetProperty="IsEnabled"
                                            Duration="0">
                                            <DiscreteBooleanKeyFrame
                                                KeyTime="0"
                                                Value="True" />
                                        </BooleanAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter TargetName="ExpandSite" Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
                            <Setter TargetName="ExpandSite" Property="Background" Value="Transparent" />
                            <Setter TargetName="ExpandSite" Property="Foreground" Value="{DynamicResource DisabledForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="skin:SkinManagerHelper.FocusVisualKind" Value="HighVisibility">
                <Setter Property="FocusVisualStyle" Value="{DynamicResource KeyboardFocusVisualStyle}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        BasedOn="{StaticResource SyncfusionSfAccordionItemStyle}"
        TargetType="{x:Type theme:SfAccordionItem}" />
</ResourceDictionary>
