<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:n="clr-namespace:Cammy">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/UI/Themes/Common/BaseStyle.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style
        x:Key="ButtonBaseBaseStyle"
        BasedOn="{StaticResource BaseStyle}"
        TargetType="{x:Type ButtonBase}">
        <Setter Property="Height" Value="{DynamicResource DefaultControlHeight}" />
        <Setter Property="Padding" Value="{DynamicResource DefaultControlPadding}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style
        x:Key="ButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="true">

                            <Grid
                                x:Name="PressedLayer"
                                Visibility="Collapsed">
                                <Rectangle
                                    Height="3"
                                    VerticalAlignment="Top"
                                    Fill="#1F000000"
                                    RadiusX="4"
                                    RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border
                                    BorderBrush="#1F000000"
                                    BorderThickness="1,0"
                                    CornerRadius="4">
                                    <Border.Effect>
                                        <BlurEffect Radius="3" />
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <Rectangle
                            x:Name="EnabledLayer"
                            Fill="#4CFFFFFF"
                            RadiusX="4"
                            RadiusY="4"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PressedLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#80cccccc" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ToggleButtonBaseStyle"
        BasedOn="{StaticResource ButtonBaseBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border
                            x:Name="Border"
                            Padding="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            SnapsToDevicePixels="true">

                            <Grid
                                x:Name="CheckedLayer"
                                Visibility="Collapsed">
                                <Rectangle
                                    Height="3"
                                    VerticalAlignment="Top"
                                    Fill="#1F000000"
                                    RadiusX="4"
                                    RadiusY="4">
                                    <Rectangle.Effect>
                                        <BlurEffect Radius="5" />
                                    </Rectangle.Effect>
                                </Rectangle>
                                <Border
                                    BorderBrush="#1F000000"
                                    BorderThickness="1,0"
                                    CornerRadius="4">
                                    <Border.Effect>
                                        <BlurEffect Radius="3" />
                                    </Border.Effect>
                                </Border>
                            </Grid>
                        </Border>
                        <Border BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>

                        <Rectangle
                            x:Name="EnabledLayer"
                            Fill="#4CFFFFFF"
                            RadiusX="4"
                            RadiusY="4"
                            Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckedLayer" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="#80cccccc" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="EnabledLayer" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  Button  -->
    <Style
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button-Primary"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button-Success"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button-Info"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource MutedForeground}" />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button-Warning"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        x:Key="Button-Danger"
        BasedOn="{StaticResource ButtonBaseStyle}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--  ***********************************************  ToggleButton  *************************************************  -->

    <Style
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ToggleButtonPrimary"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrightGreenForeground}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>

        </Style.Triggers>

    </Style>

    <Style
        x:Key="ToggleButtonSuccess"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrightGreenForeground}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>

        </Style.Triggers>
    </Style>
    <Style
        x:Key="ToggleButtonInfo"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrightGreenForeground}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style
        x:Key="ToggleButtonWarning"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{StaticResource GreenBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource BrightGreenForeground}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>

        </Style.Triggers>
    </Style>


    <Style
        x:Key="ToggleButtonDanger"
        BasedOn="{StaticResource ToggleButtonBaseStyle}"
        TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}" />
        <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}" />
                <Setter Property="BorderBrush" Value="{StaticResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{StaticResource WhiteForeground}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{StaticResource ControlInteriorBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}"  />
                <Setter Property="Foreground" Value="{StaticResource FormForeground}" />
            </Trigger>

        </Style.Triggers>
    </Style>

    <!--  *********************************************** MetroButton *****************************************************  -->

    <Style TargetType="{x:Type n:MetroButton}">
        <Setter Property="Background" Value="{DynamicResource ControlInteriorBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BlueBorderBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="FontStyle" Value="Normal" />

        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource SteelBlueBackground}"  />
                <Setter Property="BorderBrush" Value="{DynamicResource LightBlueBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource WhiteForeground}" />
            </Trigger>

            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Background" Value="{DynamicResource ControlInteriorBrush}" />
                <Setter Property="BorderBrush" Value="{StaticResource BlueBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource LightBlueBrush}" />
            </Trigger>


        </Style.Triggers>
    </Style>
</ResourceDictionary>